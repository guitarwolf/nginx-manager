#!/usr/bin/env ruby
# -*- mode:ruby; coding:utf-8 -*-

require 'rubygems' if RUBY_VERSION < '1.9'
require 'msgpack/rpc'
require 'nginx/manager'
require 'sys_logger'
require 'webrick'
require 'yaml'

YAML.load_file('/etc/ngxagent/ngxagent.yaml') if File.exist?('/etc/ngxagent/ngxagent.yaml')

$logger          = SysLogger.new
$logger.facility = SysLogger::LOG_LOCAL7
Syslog.mask      = Syslog::LOG_UPTO(Syslog::LOG_INFO)
PID_FILE = '/var/run/ngxagent.pid'

def main(argv)
  begin
    $logger.info("[#{$$}] ngxagent-server start.")

    agent = MessagePack::RPC::Server.new
    agent.listen(Nginx::Agent::BIND_ADDRESS, Nginx::Agent::BIND_PORT, Nginx::Agent::Handler.new)

    # シグナルをキャッチしたら終了
    [:INT, :TERM, :KILL].each do |signal|
      Signal.trap(signal) {
        Syslog.open unless Syslog.opened?
        $logger.warn("[#{$$}] ngxagent stop.")
        agent.stop
      }
    end

    # HUPは何かをreloadする
    Signal.trap(:HUP) {
      begin
        #load ''
      rescue
        $logger.error($!)
      end
    }

    WEBrick::Daemon.start {
      File.open(PID_FILE, 'w') {|io| io.write $$ }
      begin
        agent.run
      rescue => err
        $logger.error("#{$!}\n#{err.backtrace}")
      ensure
        
      end
    }
  rescue => err
    Syslog.open unless Syslog.opened?
    $logger.error("#{$!}\n#{err.backtrace}")
    exit (1)
  end
end

main(ARGV)

__END__
